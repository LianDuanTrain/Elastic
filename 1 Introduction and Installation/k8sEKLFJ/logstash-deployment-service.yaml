---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-yaml-config
  namespace: elk
  labels:
    k8s-app: logstash
data:
  logstash.yml: |-
    http.host: "0.0.0.0"
    xpack.monitoring.enabled: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-conf-config
  namespace: elk
  labels:
    k8s-app: logstash
data:
  logstash.conf: |-
      input 
      { 
        beats  {
            port=> 5400      
        }

      }

      filter{
        
      }

      output 
      {
          elasticsearch { 
              hosts => ["es-service:9200"] 
            }

      }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
  labels:
    k8s-app: logstash
    app: logstash
    node.type: logstash-node
spec:
 #replicas: 1
  selector:
    matchLabels:
      k8s-app: logstash
      app: logstash
      node.type: logstash-node
  template:
    metadata:
      labels:
        k8s-app: logstash
        app: logstash
        node.type: logstash-node
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.17.0
        volumeMounts:
          - name: logstash-config
            mountPath: /usr/share/logstash/pipeline/logstash.conf
            readOnly: true
            subPath: logstash.conf 
          - name: logstash-yaml
            mountPath: /usr/share/logstash/config/logstash.yml
            readOnly: true
            subPath: logstash.yml  
        ports:
            - containerPort: 5400    
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-conf-config
      - name: logstash-yaml
        configMap:
          name: logstash-yaml-config

---

apiVersion: v1
kind: Service
metadata:
  labels:
    logstash.service: logstash-service
  name: logstash-service
  namespace: elk
spec:
  ports:
    - name: "5400"
      port: 5400
      targetPort: 5400
  selector:
    node.type: logstash-node


